<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Task Tracker: Debouncer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Task Tracker
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classDebouncer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Debouncer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Non-memorizing startup delay for debouncing.  
 <a href="classDebouncer.xhtml#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for Debouncer:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classDebouncer__coll__graph.svg" width="246" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab410c9dc2b0b906785a1e4124bde2c20"><td class="memTemplParams" colspan="2">template&lt;class Rep , class Period &gt; </td></tr>
<tr class="memitem:ab410c9dc2b0b906785a1e4124bde2c20"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classDebouncer.xhtml#ab410c9dc2b0b906785a1e4124bde2c20">Debouncer</a> (std::function&lt; void(void)&gt; handler, <a class="el" href="Protocol_8cpp.xhtml#a59bc70cd98ed5c6ceb5dd452caa54ac3">std::chrono::duration</a>&lt; Rep, Period &gt; debounceTime, int priority=<a class="el" href="group__debouncer__priority.xhtml#ga0a5cb12d139cad7002bcb99eea151a59">debouncer::defaultPriorityToInt</a>())</td></tr>
<tr class="memdesc:ab410c9dc2b0b906785a1e4124bde2c20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup and start an (initially idle) startup delay task.  <a href="classDebouncer.xhtml#ab410c9dc2b0b906785a1e4124bde2c20">More...</a><br /></td></tr>
<tr class="separator:ab410c9dc2b0b906785a1e4124bde2c20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf482406de6a961916b2bd43f04a3896"><td class="memItemLeft" align="right" valign="top">UBaseType_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDebouncer.xhtml#adf482406de6a961916b2bd43f04a3896">getTaskStackHighWaterMark</a> () const</td></tr>
<tr class="memdesc:adf482406de6a961916b2bd43f04a3896"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates minimum free memory on the task specific stack.  <a href="classDebouncer.xhtml#adf482406de6a961916b2bd43f04a3896">More...</a><br /></td></tr>
<tr class="separator:adf482406de6a961916b2bd43f04a3896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6f1115d3de147d670852e9564aeb34a"><td class="memItemLeft" align="right" valign="top">std::function&lt; void(void)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDebouncer.xhtml#af6f1115d3de147d670852e9564aeb34a">getInterruptFunction</a> () const</td></tr>
<tr class="memdesc:af6f1115d3de147d670852e9564aeb34a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides the function to be used to indicate state changes to be debounced.  <a href="classDebouncer.xhtml#af6f1115d3de147d670852e9564aeb34a">More...</a><br /></td></tr>
<tr class="separator:af6f1115d3de147d670852e9564aeb34a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Non-memorizing startup delay for debouncing. </p>
<p>Based of FreeRTOS task notifications.</p>
<p>Using a startup delay has the advantage, that short pulses (shorter than the debounce period) will have no effect. In contrast classical debouncing trough ignoring changes for the debounce period, after an initial change, may miss the second state change of a short pulse.</p>
<p>Operation:</p>
<ul>
<li>if the interrupt function (typically called by an interrupt), provided by <a class="el" href="classDebouncer.xhtml#af6f1115d3de147d670852e9564aeb34a">getInterruptFunction()</a> is called, a timer for the startup delay will start</li>
<li>if the interrupt function is called again the timer will restart</li>
<li>when the timer expires, the handler will be called</li>
</ul>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="debouncing_approaches.xhtml">Debouncing Approaches</a> </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab410c9dc2b0b906785a1e4124bde2c20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab410c9dc2b0b906785a1e4124bde2c20">&#9670;&nbsp;</a></span>Debouncer()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Rep , class Period &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Debouncer::Debouncer </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; void(void)&gt;&#160;</td>
          <td class="paramname"><em>handler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="Protocol_8cpp.xhtml#a59bc70cd98ed5c6ceb5dd452caa54ac3">std::chrono::duration</a>&lt; Rep, Period &gt;&#160;</td>
          <td class="paramname"><em>debounceTime</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>priority</em> = <code><a class="el" href="group__debouncer__priority.xhtml#ga0a5cb12d139cad7002bcb99eea151a59">debouncer::defaultPriorityToInt</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Setup and start an (initially idle) startup delay task. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Rep</td><td>Rep, an arithmetic type representing the number of ticks </td></tr>
    <tr><td class="paramname">Period</td><td>a std::ratio representing the tick period (i.e. the number of seconds per tick) </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">handler</td><td>is a function to be called when the timer expires </td></tr>
    <tr><td class="paramname">debounceTime</td><td>is the startup delay </td></tr>
    <tr><td class="paramname">priority</td><td>is the priority in which the delay task and therefore the handler shall be called </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af6f1115d3de147d670852e9564aeb34a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6f1115d3de147d670852e9564aeb34a">&#9670;&nbsp;</a></span>getInterruptFunction()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;void(void)&gt; Debouncer::getInterruptFunction </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Provides the function to be used to indicate state changes to be debounced. </p>
<dl class="section return"><dt>Returns</dt><dd>a function which must be called when the observed state changes </dd></dl>

</div>
</div>
<a id="adf482406de6a961916b2bd43f04a3896"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf482406de6a961916b2bd43f04a3896">&#9670;&nbsp;</a></span>getTaskStackHighWaterMark()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UBaseType_t Debouncer::getTaskStackHighWaterMark </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicates minimum free memory on the task specific stack. </p>
<p>This can be used to estimate the necessary stack size for the task.</p>
<dl class="section return"><dt>Returns</dt><dd>number of minimum free words on the task </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>lib/3rd_party_adapters/FreeRTOS/<a class="el" href="debouncedIsr_8cpp.xhtml">debouncedIsr.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Jun 6 2024 19:25:33 for Task Tracker by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>

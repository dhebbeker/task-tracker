<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Task Tracker: lib/application_business_rules/serial_interface/Protocol.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Task Tracker
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.5 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="dir_6dbb42d2342d9d7292a192bc1d024acc.xhtml">application_business_rules</a></li><li class="navelem"><a class="el" href="dir_17a6007a5c84c34f300c622be50c188b.xhtml">serial_interface</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">Protocol.cpp File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="Protocol_8hpp_source.xhtml">Protocol.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="command__line__interpreter_8hpp_source.xhtml">command_line_interpreter.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="serial__port_8hpp_source.xhtml">serial_port.hpp</a>&quot;</code><br />
<code>#include &lt;array&gt;</code><br />
<code>#include &quot;<a class="el" href="JsonGenerator_8hpp_source.xhtml">JsonGenerator.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="DeletedTaskObject_8hpp_source.xhtml">serial_protocol/DeletedTaskObject.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="ProtocolVersionObject_8hpp_source.xhtml">serial_protocol/ProtocolVersionObject.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="TaskList_8hpp_source.xhtml">serial_protocol/TaskList.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="TaskObject_8hpp_source.xhtml">serial_protocol/TaskObject.hpp</a>&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
<code>#include &lt;<a class="el" href="Task_8hpp_source.xhtml">tasks/Task.hpp</a>&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for Protocol.cpp:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="Protocol_8cpp__incl.svg" width="1588" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a6623836d688a90789ef36d71208267ee"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#a6623836d688a90789ef36d71208267ee">defaultJsonIndent</a> = 4</td></tr>
<tr class="separator:a6623836d688a90789ef36d71208267ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa494944475a226c613cdd03931ba061d"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#aa494944475a226c613cdd03931ba061d">info</a></td></tr>
<tr class="separator:aa494944475a226c613cdd03931ba061d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1b41dfb159b12da990d777541a393bc"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#af1b41dfb159b12da990d777541a393bc">infoCmd</a> = cli::makeCommand(&quot;info&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#aa494944475a226c613cdd03931ba061d">info</a>))</td></tr>
<tr class="separator:af1b41dfb159b12da990d777541a393bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bf6dea54b124ec11c84992bdf95539a"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#a2bf6dea54b124ec11c84992bdf95539a">list</a> = []() { <a class="el" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <a class="el" href="JsonGenerator_8hpp.xhtml#ab570bec10f003b4067e8d8974ba69126">toJsonString</a>(<a class="el" href="namespacedevice.xhtml#a5d868aecd5efe12cd7b64e2323f3886f">device::tasks</a>) &lt;&lt; std::endl; }</td></tr>
<tr class="separator:a2bf6dea54b124ec11c84992bdf95539a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac637a1d9e3afd1ca839afe51140a4bbc"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#ac637a1d9e3afd1ca839afe51140a4bbc">listCmd</a> = cli::makeCommand(&quot;list&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#a2bf6dea54b124ec11c84992bdf95539a">list</a>))</td></tr>
<tr class="separator:ac637a1d9e3afd1ca839afe51140a4bbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0182f8b333624e0a8388ad40db3270df"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#a0182f8b333624e0a8388ad40db3270df">edit</a></td></tr>
<tr class="separator:a0182f8b333624e0a8388ad40db3270df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabe97ddaaebd88de80d8a8af7bd09fc0"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">cli::Option</a>&lt; <a class="el" href="Task_8hpp.xhtml#afa2efb6d57531344abcae953e6ec4ce1">TaskId</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a> = {.labels = {&quot;--id&quot;}, .defaultValue = 0}</td></tr>
<tr class="separator:aabe97ddaaebd88de80d8a8af7bd09fc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc14b7721aad8b82ca16d71de603499c"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">cli::Option</a>&lt; std::basic_string&lt; <a class="el" href="classProtocolHandler.xhtml#a32cc1b3b5f896e72a81a0a9722823df5">ProtocolHandler::CharType</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a> = {.labels = {&quot;--name&quot;}, .defaultValue = &quot;foo&quot;}</td></tr>
<tr class="separator:abc14b7721aad8b82ca16d71de603499c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac3a212559a034ef1c64cf04d211ec5b"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">cli::Option</a>&lt; Task::Duration::rep &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a> = {.labels = {&quot;--duration&quot;}, .defaultValue = 0}</td></tr>
<tr class="separator:aac3a212559a034ef1c64cf04d211ec5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a317dc164e000b87848282d91b5771e45"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#a317dc164e000b87848282d91b5771e45">editCmd</a> = cli::makeCommand(&quot;edit&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#a0182f8b333624e0a8388ad40db3270df">edit</a>), std::make_tuple(&amp;<a class="el" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a>))</td></tr>
<tr class="separator:a317dc164e000b87848282d91b5771e45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08772b4d7dec2e352d1e1c7bab90fa3c"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#a08772b4d7dec2e352d1e1c7bab90fa3c">add</a></td></tr>
<tr class="separator:a08772b4d7dec2e352d1e1c7bab90fa3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a158fd8d1b67147e506833d2b44c8b3c7"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#a158fd8d1b67147e506833d2b44c8b3c7">addCmd</a> = cli::makeCommand(&quot;add&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#a08772b4d7dec2e352d1e1c7bab90fa3c">add</a>), std::make_tuple(&amp;<a class="el" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a>))</td></tr>
<tr class="separator:a158fd8d1b67147e506833d2b44c8b3c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab91f87e72268d276734e078339e45a2e"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#ab91f87e72268d276734e078339e45a2e">del</a></td></tr>
<tr class="separator:ab91f87e72268d276734e078339e45a2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b7350246196abc8003e88e623d711ff"><td class="memItemLeft" align="right" valign="top">static const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#a5b7350246196abc8003e88e623d711ff">delCmd</a> = cli::makeCommand(&quot;delete&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#ab91f87e72268d276734e078339e45a2e">del</a>), std::make_tuple(&amp;<a class="el" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>))</td></tr>
<tr class="separator:a5b7350246196abc8003e88e623d711ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3686942394aed65e3bc3cad8f03e6a28"><td class="memItemLeft" align="right" valign="top">static const std::array&lt; const <a class="el" href="structcommand__line__interpreter_1_1BaseCommand.xhtml">cli::BaseCommand</a>&lt; char &gt; *, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Protocol_8cpp.xhtml#a3686942394aed65e3bc3cad8f03e6a28">commands</a> = {&amp;<a class="el" href="Protocol_8cpp.xhtml#ac637a1d9e3afd1ca839afe51140a4bbc">listCmd</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#a317dc164e000b87848282d91b5771e45">editCmd</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#af1b41dfb159b12da990d777541a393bc">infoCmd</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#a158fd8d1b67147e506833d2b44c8b3c7">addCmd</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#a5b7350246196abc8003e88e623d711ff">delCmd</a>}</td></tr>
<tr class="separator:a3686942394aed65e3bc3cad8f03e6a28"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a08772b4d7dec2e352d1e1c7bab90fa3c" name="a08772b4d7dec2e352d1e1c7bab90fa3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08772b4d7dec2e352d1e1c7bab90fa3c">&#9670;&#160;</a></span>add</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto add</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= [](<span class="keyword">const</span> <a class="code hl_typedef" href="Task_8hpp.xhtml#afa2efb6d57531344abcae953e6ec4ce1">TaskId</a> <a class="code hl_variable" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>, <span class="keyword">const</span> std::basic_string&lt;ProtocolHandler::CharType&gt; <a class="code hl_variable" href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a>, <span class="keyword">const</span> Task::Duration::rep <a class="code hl_variable" href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a>) {</div>
<div class="line">    <span class="keywordflow">try</span></div>
<div class="line">    {</div>
<div class="line">        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;[element, created] = <a class="code hl_variable" href="namespacedevice.xhtml#a5d868aecd5efe12cd7b64e2323f3886f">device::tasks</a>.try_emplace(<span class="keywordtype">id</span>, <a class="code hl_variable" href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a>, std::chrono::seconds(<a class="code hl_variable" href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a>));</div>
<div class="line">        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;task = element-&gt;second;</div>
<div class="line">        <span class="keyword">const</span> <a class="code hl_struct" href="structtask__tracker__systems_1_1TaskObject.xhtml">TaskObject</a> taskObject = {.<a class="code hl_variable" href="structtask__tracker__systems_1_1TaskObject.xhtml#ad208870d93f664065d295998982f09f9">id</a> = element-&gt;first, .label = task.getLabel(), .duration = task.getLastRecordedDuration().count()};</div>
<div class="line">        <a class="code hl_variable" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <a class="code hl_function" href="JsonGenerator_8hpp.xhtml#ab570bec10f003b4067e8d8974ba69126">toJsonString</a>(taskObject) &lt;&lt; std::endl;</div>
<div class="line">        <span class="keywordflow">if</span> (!created)</div>
<div class="line">        {</div>
<div class="line">            <a class="code hl_variable" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <span class="stringliteral">&quot;ERROR: Task with the specified ID already exists.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">catch</span> (std::out_of_range &amp;e)</div>
<div class="line">    {</div>
<div class="line">        <a class="code hl_variable" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <span class="stringliteral">&quot;ERROR: Task not found.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line">    }</div>
<div class="line">}</div>
<div class="ttc" id="aJsonGenerator_8hpp_xhtml_ab570bec10f003b4067e8d8974ba69126"><div class="ttname"><a href="JsonGenerator_8hpp.xhtml#ab570bec10f003b4067e8d8974ba69126">toJsonString</a></div><div class="ttdeci">std::string toJsonString(const T &amp;object)</div></div>
<div class="ttc" id="aProtocol_8cpp_xhtml_aabe97ddaaebd88de80d8a8af7bd09fc0"><div class="ttname"><a href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a></div><div class="ttdeci">static const cli::Option&lt; TaskId &gt; id</div><div class="ttdef"><b>Definition:</b> Protocol.cpp:49</div></div>
<div class="ttc" id="aProtocol_8cpp_xhtml_aac3a212559a034ef1c64cf04d211ec5b"><div class="ttname"><a href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a></div><div class="ttdeci">static const cli::Option&lt; Task::Duration::rep &gt; duration</div><div class="ttdef"><b>Definition:</b> Protocol.cpp:51</div></div>
<div class="ttc" id="aProtocol_8cpp_xhtml_abc14b7721aad8b82ca16d71de603499c"><div class="ttname"><a href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a></div><div class="ttdeci">static const cli::Option&lt; std::basic_string&lt; ProtocolHandler::CharType &gt; &gt; label</div><div class="ttdef"><b>Definition:</b> Protocol.cpp:50</div></div>
<div class="ttc" id="aTask_8hpp_xhtml_afa2efb6d57531344abcae953e6ec4ce1"><div class="ttname"><a href="Task_8hpp.xhtml#afa2efb6d57531344abcae953e6ec4ce1">TaskId</a></div><div class="ttdeci">unsigned int TaskId</div><div class="ttdoc">Task ID.</div><div class="ttdef"><b>Definition:</b> Task.hpp:12</div></div>
<div class="ttc" id="anamespacedevice_xhtml_a5d868aecd5efe12cd7b64e2323f3886f"><div class="ttname"><a href="namespacedevice.xhtml#a5d868aecd5efe12cd7b64e2323f3886f">device::tasks</a></div><div class="ttdeci">TaskCollection tasks</div><div class="ttdoc">The collection of tasks to be used by the device application.</div><div class="ttdef"><b>Definition:</b> Task.cpp:50</div></div>
<div class="ttc" id="anamespaceserial__port_xhtml_a93c3f7f8728a750d9fa97277cb10378f"><div class="ttname"><a href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a></div><div class="ttdeci">std::basic_ostream&lt; CharType &gt; &amp; cout</div><div class="ttdoc">Output stream for characters to serial port.</div><div class="ttdef"><b>Definition:</b> serial_port.cpp:17</div></div>
<div class="ttc" id="astructtask__tracker__systems_1_1TaskObject_xhtml"><div class="ttname"><a href="structtask__tracker__systems_1_1TaskObject.xhtml">task_tracker_systems::TaskObject</a></div><div class="ttdoc">task object</div><div class="ttdef"><b>Definition:</b> TaskObject.hpp:12</div></div>
<div class="ttc" id="astructtask__tracker__systems_1_1TaskObject_xhtml_ad208870d93f664065d295998982f09f9"><div class="ttname"><a href="structtask__tracker__systems_1_1TaskObject.xhtml#ad208870d93f664065d295998982f09f9">task_tracker_systems::TaskObject::id</a></div><div class="ttdeci">unsigned int id</div><div class="ttdoc">unique identifier</div><div class="ttdef"><b>Definition:</b> TaskObject.hpp:16</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a158fd8d1b67147e506833d2b44c8b3c7" name="a158fd8d1b67147e506833d2b44c8b3c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a158fd8d1b67147e506833d2b44c8b3c7">&#9670;&#160;</a></span>addCmd</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto addCmd = cli::makeCommand(&quot;add&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#a08772b4d7dec2e352d1e1c7bab90fa3c">add</a>), std::make_tuple(&amp;<a class="el" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a>))</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3686942394aed65e3bc3cad8f03e6a28" name="a3686942394aed65e3bc3cad8f03e6a28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3686942394aed65e3bc3cad8f03e6a28">&#9670;&#160;</a></span>commands</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::array&lt;const <a class="el" href="structcommand__line__interpreter_1_1BaseCommand.xhtml">cli::BaseCommand</a>&lt;char&gt; *, 5&gt; commands = {&amp;<a class="el" href="Protocol_8cpp.xhtml#ac637a1d9e3afd1ca839afe51140a4bbc">listCmd</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#a317dc164e000b87848282d91b5771e45">editCmd</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#af1b41dfb159b12da990d777541a393bc">infoCmd</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#a158fd8d1b67147e506833d2b44c8b3c7">addCmd</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#a5b7350246196abc8003e88e623d711ff">delCmd</a>}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6623836d688a90789ef36d71208267ee" name="a6623836d688a90789ef36d71208267ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6623836d688a90789ef36d71208267ee">&#9670;&#160;</a></span>defaultJsonIndent</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int defaultJsonIndent = 4</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab91f87e72268d276734e078339e45a2e" name="ab91f87e72268d276734e078339e45a2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab91f87e72268d276734e078339e45a2e">&#9670;&#160;</a></span>del</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto del</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= [](<span class="keyword">const</span> <a class="code hl_typedef" href="Task_8hpp.xhtml#afa2efb6d57531344abcae953e6ec4ce1">TaskId</a> <a class="code hl_variable" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>) {</div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">bool</span> deleted = <a class="code hl_variable" href="namespacedevice.xhtml#a5d868aecd5efe12cd7b64e2323f3886f">device::tasks</a>.erase(<span class="keywordtype">id</span>) &gt; 0;</div>
<div class="line">    <span class="keyword">const</span> <a class="code hl_struct" href="structtask__tracker__systems_1_1DeletedTaskObject.xhtml">DeletedTaskObject</a> taskObject{.<a class="code hl_variable" href="structtask__tracker__systems_1_1DeletedTaskObject.xhtml#a1bb01a8c2750fb2745ee4c3b8a37e8ec">id</a> = <span class="keywordtype">id</span>};</div>
<div class="line">    <a class="code hl_variable" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <a class="code hl_function" href="JsonGenerator_8hpp.xhtml#ab570bec10f003b4067e8d8974ba69126">toJsonString</a>(taskObject) &lt;&lt; std::endl;</div>
<div class="line">    <span class="keywordflow">if</span> (!deleted)</div>
<div class="line">    {</div>
<div class="line">        <a class="code hl_variable" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <span class="stringliteral">&quot;ERROR: No task deleted.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line">    }</div>
<div class="line">}</div>
<div class="ttc" id="astructtask__tracker__systems_1_1DeletedTaskObject_xhtml"><div class="ttname"><a href="structtask__tracker__systems_1_1DeletedTaskObject.xhtml">task_tracker_systems::DeletedTaskObject</a></div><div class="ttdoc">deleted task object</div><div class="ttdef"><b>Definition:</b> DeletedTaskObject.hpp:10</div></div>
<div class="ttc" id="astructtask__tracker__systems_1_1DeletedTaskObject_xhtml_a1bb01a8c2750fb2745ee4c3b8a37e8ec"><div class="ttname"><a href="structtask__tracker__systems_1_1DeletedTaskObject.xhtml#a1bb01a8c2750fb2745ee4c3b8a37e8ec">task_tracker_systems::DeletedTaskObject::id</a></div><div class="ttdeci">unsigned int id</div><div class="ttdoc">unique identifier</div><div class="ttdef"><b>Definition:</b> DeletedTaskObject.hpp:14</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5b7350246196abc8003e88e623d711ff" name="a5b7350246196abc8003e88e623d711ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b7350246196abc8003e88e623d711ff">&#9670;&#160;</a></span>delCmd</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto delCmd = cli::makeCommand(&quot;delete&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#ab91f87e72268d276734e078339e45a2e">del</a>), std::make_tuple(&amp;<a class="el" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>))</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aac3a212559a034ef1c64cf04d211ec5b" name="aac3a212559a034ef1c64cf04d211ec5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac3a212559a034ef1c64cf04d211ec5b">&#9670;&#160;</a></span>duration</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">cli::Option</a>&lt;Task::Duration::rep&gt; duration = {.labels = {&quot;--duration&quot;}, .defaultValue = 0}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0182f8b333624e0a8388ad40db3270df" name="a0182f8b333624e0a8388ad40db3270df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0182f8b333624e0a8388ad40db3270df">&#9670;&#160;</a></span>edit</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto edit</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= [](<span class="keyword">const</span> <a class="code hl_typedef" href="Task_8hpp.xhtml#afa2efb6d57531344abcae953e6ec4ce1">TaskId</a> <a class="code hl_variable" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>, <span class="keyword">const</span> std::basic_string&lt;ProtocolHandler::CharType&gt; <a class="code hl_variable" href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a>, <span class="keyword">const</span> Task::Duration::rep <a class="code hl_variable" href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a>) {</div>
<div class="line">    <span class="keywordflow">try</span></div>
<div class="line">    {</div>
<div class="line">        <span class="keyword">auto</span> &amp;task = <a class="code hl_variable" href="namespacedevice.xhtml#a5d868aecd5efe12cd7b64e2323f3886f">device::tasks</a>.at(<span class="keywordtype">id</span>);</div>
<div class="line">        task.setLabel(<a class="code hl_variable" href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a>);</div>
<div class="line">        task.setRecordedDuration(std::chrono::seconds(<a class="code hl_variable" href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a>));</div>
<div class="line">        <span class="keyword">const</span> <a class="code hl_struct" href="structtask__tracker__systems_1_1TaskObject.xhtml">TaskObject</a> taskObject = {.<a class="code hl_variable" href="structtask__tracker__systems_1_1TaskObject.xhtml#ad208870d93f664065d295998982f09f9">id</a> = <a class="code hl_variable" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>, .label = task.getLabel(), .duration = task.getLastRecordedDuration().count()};</div>
<div class="line">        <a class="code hl_variable" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <a class="code hl_function" href="JsonGenerator_8hpp.xhtml#ab570bec10f003b4067e8d8974ba69126">toJsonString</a>(taskObject) &lt;&lt; std::endl;</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">catch</span> (std::out_of_range &amp;e)</div>
<div class="line">    {</div>
<div class="line">        <a class="code hl_variable" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <span class="stringliteral">&quot;ERROR: Task not found.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line">    }</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a317dc164e000b87848282d91b5771e45" name="a317dc164e000b87848282d91b5771e45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a317dc164e000b87848282d91b5771e45">&#9670;&#160;</a></span>editCmd</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto editCmd = cli::makeCommand(&quot;edit&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#a0182f8b333624e0a8388ad40db3270df">edit</a>), std::make_tuple(&amp;<a class="el" href="Protocol_8cpp.xhtml#aabe97ddaaebd88de80d8a8af7bd09fc0">id</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#abc14b7721aad8b82ca16d71de603499c">label</a>, &amp;<a class="el" href="Protocol_8cpp.xhtml#aac3a212559a034ef1c64cf04d211ec5b">duration</a>))</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aabe97ddaaebd88de80d8a8af7bd09fc0" name="aabe97ddaaebd88de80d8a8af7bd09fc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabe97ddaaebd88de80d8a8af7bd09fc0">&#9670;&#160;</a></span>id</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">cli::Option</a>&lt;<a class="el" href="Task_8hpp.xhtml#afa2efb6d57531344abcae953e6ec4ce1">TaskId</a>&gt; id = {.labels = {&quot;--id&quot;}, .defaultValue = 0}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa494944475a226c613cdd03931ba061d" name="aa494944475a226c613cdd03931ba061d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa494944475a226c613cdd03931ba061d">&#9670;&#160;</a></span>info</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto info</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= []() {</div>
<div class="line">    <span class="keyword">constexpr</span> <a class="code hl_struct" href="structtask__tracker__systems_1_1ProtocolVersionObject.xhtml">ProtocolVersionObject</a> version = {.<a class="code hl_variable" href="structtask__tracker__systems_1_1ProtocolVersionObject.xhtml#a3d9cf03c237bdb920a6a450ed4be9b12">major</a> = 0, .minor = 1, .patch = 0};</div>
<div class="line">    <a class="code hl_variable" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <a class="code hl_function" href="JsonGenerator_8hpp.xhtml#ab570bec10f003b4067e8d8974ba69126">toJsonString</a>(version) &lt;&lt; std::endl;</div>
<div class="line">}</div>
<div class="ttc" id="astructtask__tracker__systems_1_1ProtocolVersionObject_xhtml"><div class="ttname"><a href="structtask__tracker__systems_1_1ProtocolVersionObject.xhtml">task_tracker_systems::ProtocolVersionObject</a></div><div class="ttdoc">Protocol Version Object.</div><div class="ttdef"><b>Definition:</b> ProtocolVersionObject.hpp:10</div></div>
<div class="ttc" id="astructtask__tracker__systems_1_1ProtocolVersionObject_xhtml_a3d9cf03c237bdb920a6a450ed4be9b12"><div class="ttname"><a href="structtask__tracker__systems_1_1ProtocolVersionObject.xhtml#a3d9cf03c237bdb920a6a450ed4be9b12">task_tracker_systems::ProtocolVersionObject::major</a></div><div class="ttdeci">std::uint8_t major</div><div class="ttdef"><b>Definition:</b> ProtocolVersionObject.hpp:11</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="af1b41dfb159b12da990d777541a393bc" name="af1b41dfb159b12da990d777541a393bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1b41dfb159b12da990d777541a393bc">&#9670;&#160;</a></span>infoCmd</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto infoCmd = cli::makeCommand(&quot;info&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#aa494944475a226c613cdd03931ba061d">info</a>))</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abc14b7721aad8b82ca16d71de603499c" name="abc14b7721aad8b82ca16d71de603499c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc14b7721aad8b82ca16d71de603499c">&#9670;&#160;</a></span>label</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">cli::Option</a>&lt;std::basic_string&lt;<a class="el" href="classProtocolHandler.xhtml#a32cc1b3b5f896e72a81a0a9722823df5">ProtocolHandler::CharType</a>&gt; &gt; label = {.labels = {&quot;--name&quot;}, .defaultValue = &quot;foo&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2bf6dea54b124ec11c84992bdf95539a" name="a2bf6dea54b124ec11c84992bdf95539a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bf6dea54b124ec11c84992bdf95539a">&#9670;&#160;</a></span>list</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto list = []() { <a class="el" href="namespaceserial__port.xhtml#a93c3f7f8728a750d9fa97277cb10378f">serial_port::cout</a> &lt;&lt; <a class="el" href="JsonGenerator_8hpp.xhtml#ab570bec10f003b4067e8d8974ba69126">toJsonString</a>(<a class="el" href="namespacedevice.xhtml#a5d868aecd5efe12cd7b64e2323f3886f">device::tasks</a>) &lt;&lt; std::endl; }</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac637a1d9e3afd1ca839afe51140a4bbc" name="ac637a1d9e3afd1ca839afe51140a4bbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac637a1d9e3afd1ca839afe51140a4bbc">&#9670;&#160;</a></span>listCmd</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto listCmd = cli::makeCommand(&quot;list&quot;, std::function(<a class="el" href="Protocol_8cpp.xhtml#a2bf6dea54b124ec11c84992bdf95539a">list</a>))</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue May 7 2024 05:14:49 for Task Tracker by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5
</small></address>
</body>
</html>
